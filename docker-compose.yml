version: '3.8'

services:
  claude-api:
    build: .
    container_name: claude-openai-bridge
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      # Server Configuration
      - HOST=0.0.0.0
      - PORT=8000
      - DEBUG=false
      
      # Claude CLI Configuration
      - CLAUDE_COMMAND=claude
      - REQUEST_TIMEOUT=60
      - MAX_RETRIES=3
      - RETRY_DELAY=1.0
      - MAX_PROMPT_LENGTH=100000
      
      # History Management
      - ENABLE_HISTORY=true
      - HISTORY_STORAGE=file
      - HISTORY_DIR=/app/data/conversations
      - MAX_HISTORY_MESSAGES=100
      - HISTORY_TTL_HOURS=24
      - MAX_CONTEXT_TOKENS=32000
      
      # Security Configuration (Web-only mode)
      - RESTRICTED_MODE=true
      - ALLOWED_TOOLS=WebSearch,WebFetch,WebView
      - DISALLOWED_TOOLS=Bash,Edit,Write,Read,LS,Grep,Glob,NotebookEdit,NotebookRead,TodoWrite,TodoRead,exit_plan_mode,Task,MultiEdit,mcp__*
      - DANGEROUSLY_SKIP_PERMISSIONS=false
      
    volumes:
      # Persist conversation history
      - ./data/conversations:/app/data/conversations
      # Mount .env file if exists
      - ./.env:/app/.env:ro
      
    # Resource limits
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 2G
        reservations:
          cpus: '0.5'
          memory: 512M
    
    # Logging configuration
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    
    # Health check
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Optional: Nginx reverse proxy for production
  nginx:
    image: nginx:alpine
    container_name: claude-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - claude-api
    profiles:
      - production

  # Optional: Redis for distributed session storage
  redis:
    image: redis:7-alpine
    container_name: claude-redis
    restart: unless-stopped
    command: redis-server --requirepass ${REDIS_PASSWORD:-claude-redis-secret}
    volumes:
      - redis-data:/data
    ports:
      - "6379:6379"
    profiles:
      - redis
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 3s
      retries: 5

volumes:
  redis-data:
    driver: local

networks:
  default:
    name: claude-network